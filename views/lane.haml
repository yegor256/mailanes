- # (The MIT License)
- # 
- # Copyright (c) 2018-2025 Yegor Bugayenko
- # 
- # Permission is hereby granted, free of charge, to any person obtaining a copy
- # of this software and associated documentation files (the 'Software'), to deal
- # in the Software without restriction, including without limitation the rights
- # to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
- # copies of the Software, and to permit persons to whom the Software is
- # furnished to do so, subject to the following conditions:
- # 
- # The above copyright notice and this permission notice shall be included in all
- # copies or substantial portions of the Software.
- # 
- # THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- # IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
- # FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
- # AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
- # LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
- # OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
- # SOFTWARE.

%h2
  Lane
  = succeed ':' do
    = "##{lane.id}"
  &= lane.title

%p
  %a.item{ onclick: '$("#save").show();$("#yaml").focus();' }
    Edit YAML
  %a.item{ onclick: '$("#add").show();$("#title").focus();' }
    Add letter

%form.hidden{ method: 'POST', action: iri.cut('/save-lane'), id: 'save' }
  %fieldset
    %input{ type: 'hidden', name: 'id', value: lane.id }
    %label
      %a{ href: 'https://github.com/yegor256/mailanes#lane' } YAML
      config:
    %textarea{ name: 'yaml', id: 'yaml', style: 'width:100%;height:12em;', required: 'true' }= lane.yaml.to_yaml
    %input{ type: 'submit', value: 'Save' }

%form.hidden{ method: 'POST', action: iri.cut('/add-letter'), id: 'add' }
  %input{ type: 'hidden', name: 'id', value: lane.id }
  %input{ type: 'text', id: 'title', name: 'title', placeholder: 'Letter title', size: 40, required: 'true', autocomplete: 'off' }
  %input{ type: 'submit', value: 'Add Letter' }

%p
  Delivered
  = lane.deliveries_count
  emails.

%p
  There are
  = lane.letters.count
  letter(s),
  %strong the highest
  in the list will be delivered first:

- letters = lane.letters.all
- letters.each_with_index do |r, idx|
  %p
    - unless idx.zero?
      %a{ href: iri.cut('/letter-up').add(id: r.id), title: 'Move it up' }= '⬆'
    - if idx < letters.count - 1
      %a{ href: iri.cut('/letter-down').add(id: r.id), title: 'Move it down' }= '⬇'
    = succeed ':' do
      %a{ href: iri.cut('/letter').add(id: r.id) }= "##{r.id}"
    %span{ class: ('cross' unless r.active?), title: "Place: #{r.place}" }
      &= r.title
