- # (The MIT License)
- # 
- # Copyright (c) 2018-2025 Yegor Bugayenko
- # 
- # Permission is hereby granted, free of charge, to any person obtaining a copy
- # of this software and associated documentation files (the 'Software'), to deal
- # in the Software without restriction, including without limitation the rights
- # to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
- # copies of the Software, and to permit persons to whom the Software is
- # furnished to do so, subject to the following conditions:
- # 
- # The above copyright notice and this permission notice shall be included in all
- # copies or substantial portions of the Software.
- # 
- # THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- # IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
- # FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
- # AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
- # LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
- # OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
- # SOFTWARE.

%h2
  Lists

%p
  %a.item{ onclick: '$("#add").show();$("#title").focus();' } Add List
  %a.item{ onclick: '$("#find").show();$("#query").focus();' } Find Recipient
  %a.item{ onclick: '$("#many").show();$("#emails").focus();' } Deactivate Many

%form.hidden{ method: 'POST', action: iri.cut('/deactivate-many'), id: 'many' }
  %textarea{ name: 'emails', id: 'emails', style: 'width:100%;height:12em;', required: 'true' }
  %input{ type: 'submit', value: 'Deactivate' }

%form.hidden{ method: 'POST', action: iri.cut('/add-list'), id: 'add' }
  %input{ type: 'text', name: 'title', id: 'title', placeholder: 'List title...', size: 45, required: 'true', autocomplete: 'off' }
  %input{ type: 'submit', value: 'Add' }

%form.hidden{ method: 'GET', action: iri.cut('/lists'), id: 'find' }
  %input{ type: 'text', name: 'query', placeholder: 'Query', id: 'query', size: 45, required: 'true', autocomplete: 'off' }
  %input{ type: 'submit', value: 'Find' }

- unless found.nil?
  %p
    Found
    = found.count
    recipients by
    = "\"#{params[:query]}\":"
  %ul
    - found.each do |r|
      - list = r.list
      %li
        %a{ href: iri.cut('/recipient').add(id: r.id), class: (r.active? ? '' : 'cross') }= r.email
        in
        = succeed ':' do
          %a{ href: iri.cut('/list').add(id: list.id) }= "List ##{list.id}"
        &= "\"#{list.title}\""

- unless dups.zero?
  %p
    There are
    %span.red= "#{dups} duplicate emails"
    in your lists!

- if lists.all.empty?
  %p
    There are no lists yet
- else
  %p
    All your lists, with
    = lists.total_recipients
    recipients total:

  - lists.all.each do |list|
    %p
      = succeed ':' do
        %a{ href: iri.cut('/list').add(id: list.id) }= "##{list.id}"
      = list.title
      = "(#{list.recipients.count} recipients)"
      - if list.stop?
        %strong.red STOP
